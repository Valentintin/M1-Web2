# Cache downloaded dependencies and plugins between builds.
# Not strictly necessary, but speeds up the builds.
cache:
  key: "$CI_JOB_NAME"
  paths:
    # Must be within the repository under test hence we can't use the
    # default ~/.m2
    - .m2/repository
variables:
  # Use the cached directory above.
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"

stages:
  - users
  - api
  - client

deploy-users:
    stage: users
    image: maven:3.9.6-eclipse-temurin-21 # docker image with Maven
    before_script:
        - chmod 400 $CI_SSH_KEY
        - ./ci/setup-mvn-proxy.sh
        - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    script:
        - cd users
        - mvn clean package
        - which scp
        - scp -o StrictHostKeyChecking=no -i $CI_SSH_KEY target/users.war gitlabci@192.168.75.36:/opt/tomcat/webapps/users.war

deploy-api:
    stage: api
    image: node:21
    before_script:
      - chmod 400 $CI_SSH_KEY
      - cd admin
      - npm install && npm run build
    script:
      - cd ../api
      - npm install && npm test
      - cd ..
      - scp -o StrictHostKeyChecking=no -i $CI_SSH_KEY -r api/ gitlabci@192.168.75.36:~/
      - ssh -o StrictHostKeyChecking=no -i $CI_SSH_KEY gitlabci@192.168.75.36 'cd api && cp -r public/* /usr/share/nginx/html/secret/ && pm2 delete all && pm2 start index.js'

deploy-client:
    stage: client
    image: node:21
    script:
      - chmod 400 $CI_SSH_KEY
      - cd client
      - npm install && npm run build
      - scp -o StrictHostKeyChecking=no -i $CI_SSH_KEY -r dist/ gitlabci@192.168.75.36:~/
      - ssh -o StrictHostKeyChecking=no -i $CI_SSH_KEY gitlabci@192.168.75.36 'cp -r dist/* /usr/share/nginx/html/

