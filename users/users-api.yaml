openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /users/{login}:
    get:
      tags:
      - Operation REST
      summary: Get one user in json/xml/html format
      operationId: getUsers
      parameters:
      - name: login
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json: {}
            application/xml: {}
            text/html: {}
        "400":
          description: Bad request
    put:
      tags:
      - Operation REST
      summary: Modify a user
      operationId: modifyUserURL_1
      parameters:
      - name: login
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDto'
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
        required: true
      responses:
        "200":
          description: Successful operation
    delete:
      tags:
      - Operation REST
      summary: Delete a user
      operationId: deleteUser
      parameters:
      - name: login
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
  /users:
    get:
      tags:
      - Operation REST
      summary: Get all users in json/xml/html format
      operationId: getAllUsers
      responses:
        "200":
          description: Successful operation
          content:
            application/json: {}
            application/xml: {}
            text/html: {}
    post:
      tags:
      - Operation REST
      summary: Create a user
      operationId: createUserURL_1
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDto'
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
        required: true
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
  /logout:
    post:
      tags:
      - Operation controller
      summary: To let a user disconnect
      operationId: logout
      parameters:
      - name: Authentication
        in: header
        required: true
        schema:
          type: string
      - name: origin
        in: header
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content
        "400":
          description: Bad request
        "401":
          description: Unauthorized
  /login:
    post:
      tags:
      - Operation controller
      summary: To let a user connect
      operationId: loginUrlEncoded_1
      parameters:
      - name: Origin
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDto'
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
        required: true
      responses:
        "204":
          description: No content
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Not found
  /authenticate:
    get:
      tags:
      - Operation controller
      summary: To let a user authentificate
      operationId: authenticate
      parameters:
      - name: jwt
        in: query
        required: true
        schema:
          type: string
      - name: origin
        in: query
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content
        "400":
          description: Bad request
        "401":
          description: Unauthorized
components:
  schemas:
    UserDto:
      type: object
      properties:
        login:
          type: string
        species:
          type: string
          enum:
          - PIRATE
          - VILLAGEOIS
          - ADMIN
        password:
          type: string
